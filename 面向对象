
封装，继承，多态

开闭原则：
通过继承，派生出新组件完成需求，而不是修改现有的代码来完成需求。
抽象类（Abstract Class）、接口(Interface)等等，都可以看作是开闭原则的实现方法。接口及抽象类定义的越抽象全面就越有可能通过继承完成需求。

对扩展开放：允许新增超类（抽象类，接口）的子类；
对修改封闭：不需要修改依赖超类（抽象类，接口）的某个函数。
